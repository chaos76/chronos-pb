;Class Array
Declare.i Array_CountElement(*this.Array)
Declare.i Array_SetElement(*this.Array,number.i,*Element.i)
Declare.i Array_AddElement(*this.Array,*Element.i)
Declare.i Array_FreeElement(*this.Array,number.i)
Declare.i Array_GetElement(*this.Array,number.i)
Declare.i Array_RemoveAll(*this.Array)
Declare.i Array_Free(*this.Array)

declare.i New_Array()
;Class Scintilla
Declare.i Scintilla_SetIndentationGuides(*this.Scintilla,Type.l)
Declare.i Scintilla_GetPosition(*this.Scintilla)
Declare.i Scintilla_GetLineEndPosition(*this.Scintilla,line.i)
Declare.i Scintilla_LineFromPosition(*this.Scintilla,Pos.i)
Declare.i Scintilla_PositionFromLine(*this.Scintilla,Line.i)
Declare.i Scintilla_LineLength(*this.Scintilla,line.i)
Declare.i Scintilla_GetLineStartPosition(*this.Scintilla,line.i)
Declare.i Scintilla_GETLINECOUNT(*this.Scintilla)
Declare.s Scintilla_GETLINE(*this.Scintilla,line.i)
Declare.i Scintilla_GetCharAt(*this.Scintilla,Position.i)
Declare.i Scintilla_SetLineIdentation(*this.Scintilla,Ligne.i,Identation.i)
Declare.i Scintilla_GetLineIdentation(*this.Scintilla,Ligne.i)
Declare.i Scintilla_GetTabWidth(*this.Scintilla)
Declare.i Scintilla_AddText(*this.Scintilla,txt.s)
Declare.i Scintilla_SetLine(*this.Scintilla,Line.i)
Declare.i Scintilla_SetPosition(*this.Scintilla,Position.i)
Declare.i Scintilla_GetPositionFromLine(*this.Scintilla,Line.i)
Declare.i Scintilla_GetTextWidth(*this.Scintilla,style.i,txt.s)
Declare.i Scintilla_ResizeMargins(*this.Scintilla)
Declare.i Scintilla_GetEndStyled(*this.Scintilla)
Declare.i Scintilla_GetFoldLevel(*this.Scintilla,Line.l)
Declare.i Scintilla_SetFoldLevel(*this.Scintilla,Line.l,Level.l)
Declare.i Scintilla_CanRedo(*this.Scintilla)
Declare.i Scintilla_CanUndo(*this.Scintilla)
Declare.i Scintilla_EmptyUndoBuffer(*this.Scintilla)
Declare.i Scintilla_Undo(*this.Scintilla)
Declare.i Scintilla_GoToPoS(*this.Scintilla,pos.l)
Declare.i Scintilla_Redo(*this.Scintilla)
Declare.i Scintilla_GetLength(*this.Scintilla)
Declare.i Scintilla_FindString(*this.Scintilla,Text.s,Position.l=0,Flag.i=#Null)
Declare.i Scintilla_SetSel(*this.Scintilla,anchorPos.l,currentPos.l)

declare.i New_Scintilla()
;Class Option
Declare.i Option_SetValue(*this.Option,Value.s)

declare.i New_Option(Name.s,Value.s)
;Class Group
Declare.i Group_CreateOption(*this.Group,Key.s,Value.s)
Declare.i Group_IsKey(*this.Group,Key.s)

declare.i New_Group(Name.s)
;Class Preference
Declare.i Preference_LoadPreference(*this.Preference,file.s)
Declare.i Preference_SavePreference(*this.Preference)
Declare.i Preference_CreateGroup(*this.Preference,Group.s)
Declare.i Preference_IsGroup(*this.Preference,Group.s)
Declare.i Preference_CountGroup(*this.Preference)
Declare.i Preference_GetGroupNumber(*this.Preference,n.i)
Declare.i Preference_SetPreference(*this.Preference,Group.s,Key.s,Value.s)
Declare.b Preference_IsPreference(*this.Preference,Group.s,Key.s)
Declare.s Preference_GetPreference(*this.Preference,Group.s,Key.s)

declare.i New_Preference(name.s)
;Class Panel

declare.i New_Panel()
;Class IHM
Declare.i IHM_WriteMessage(*this.IHM,Msg.s)

declare.i New_IHM()
;Class Project
Declare.i Project_PrecompilerIsEnable(*this.Project)

declare.i New_Project()
;Class Compiler
Declare.i Compiler_GetStructure(*this.Compiler,Name.s)

declare.i New_Compiler()
;Class LineCode
Declare.i LineCode_Free(*this.LineCode)

declare.i New_LineCode(Text.s,File.s,Line.l)
;Class Precompiler
Declare.i Precompiler_LoadEnumeration(*this.Precompiler,n.i,*Element.Precompiler_Element)
Declare.i Precompiler_IsConstant(*this.Precompiler,Name.s)
Declare.i Precompiler_LoadAttribut(*this.Precompiler,*Line.LineCode,*List.Array,*Body.Array)
Declare.i Precompiler_LoadStructure(*this.Precompiler,n.i)
Declare.i Precompiler_LoadStructureAttribut(*this.Precompiler,n.i,*StructureP.Precompiler_Structure)
Declare.i Precompiler_LoadProcedure(*this.Precompiler,n.i)
Declare.i Precompiler_LoadVariable(*this.Precompiler,n.l,IsGlobal.b,DefaultType.s="i")
Declare.i Precompiler_LoadMethod(*this.Precompiler,n.i,*Class.Precompiler_Class)
Declare.i Precompiler_GetClass(*this.Precompiler,Name.s)
Declare.i Precompiler_Constructor(*this.Precompiler,*Class.Precompiler_Class)
Declare.i Precompiler_LoadClass(*this.Precompiler,n.i,NameSpace.s="",*ClassList.Array=#Null)
Declare.i Precompiler_LoadMacro(*this.Precompiler,n.i)
Declare.i Precompiler_getLine(*this.Precompiler,n.i)
Declare.i Precompiler_restart(*this.Precompiler,*Compiler.Compiler)
Declare.i Precompiler_start(*this.Precompiler,File.s)
Declare.i Precompiler_FormatCode(*this.Precompiler)
Declare.i Precompiler_CheckConstructor(*this.Precompiler,*Line.LineCode)
Declare.i Precompiler_FormatText(*this.Precompiler,*Line.LineCode,*Variable.Array=#Null,*Attribut.Array=#Null)
Declare.i Precompiler_FormatMethod(*this.Precompiler,*Line.LineCode,*Variable.Array,*Attribut.Array=#Null)
Declare.i Precompiler_SaveFile(*this.Precompiler,File.s)
Declare.i Precompiler_LoadFileStructure(*this.Precompiler)
Declare.i Precompiler_GetStructure(*this.Precompiler,Name.s,*StructureNotIn.Precompiler_Structure=#Null)
Declare.s Precompiler_GetTypeFromStructureField(*this.Precompiler,Type.s,Field.s)
Declare.i Precompiler_Static_GetVariable(*Array.Array,Name.s)

declare.i New_Precompiler()
;Class Precompiler_Element
Declare.i Precompiler_Element_Free(*this.Precompiler_Element)

declare.i New_Precompiler_Element()
;Class Precompiler_Constant

declare.i New_Precompiler_Constant(*Line.LineCode,*Element.Precompiler_Element)
;Class Precompiler_Attribut

declare.i New_Precompiler_Attribut()
;Class Precompiler_StructureAttribut
Declare.s Precompiler_StructureAttribut_GetDeclaration(*this.Precompiler_StructureAttribut)

declare.i New_Precompiler_StructureAttribut(Text.s)
;Class Precompiler_Structure
Declare.i Precompiler_Structure_GetField(*this.Precompiler_Structure,Field.s)
Declare.i Precompiler_Structure_Free(*this.Precompiler_Structure)

declare.i New_Precompiler_Structure()
;Class Precompiler_ProcedureAttribut
Declare.s Precompiler_ProcedureAttribut_GetDeclaration(*this.Precompiler_ProcedureAttribut)

declare.i New_Precompiler_ProcedureAttribut(Definition.s,File.s,Line.l)
;Class Precompiler_Procedure

declare.i New_Precompiler_Procedure()
;Class Precompiler_Variable

declare.i New_Precompiler_Variable()
;Class Precompiler_Method

declare.i New_Precompiler_Method()
;Class Precompiler_ClassAttribut

declare.i New_Precompiler_ClassAttribut(*Line.LineCode)
;Class Precompiler_Class
Declare.i Precompiler_Class_GetMethod(*this.Precompiler_Class,Name.s)
Declare.i Precompiler_Class_IsConstructor(*this.Precompiler_Class,Line.s)

declare.i New_Precompiler_Class()
;Class Precompiler_Macro

declare.i New_Precompiler_Macro()
;Class System
Declare.i System_RemoveCurrentPanel(*this.System,History.b=#True)
Declare.i System_GetCurrentPanel(*this.System)
Declare.i System_AddPanel(*this.System,File.s="",*File.File=#Null)
Declare.i System_PrecompileFile(*this.System,File.s,Destination.s)
Declare.i System_RemovePanel(*this.System,number.w,History.b=#True)
Declare.i System_precompilerIsEnable(*this.System)
Declare.i System_BuildCurrentFile(*this.System,Destination.s)
Declare.i System_CodeError(*this.System,File.s,Line.l,Error.s)
Declare.i System_RunProgram(*this.System,File.s,Param.s,Precompilation.b)
Declare.i System_GetCurrentCompiler(*this.System)

declare.i New_System()
Declare.i CreateArray()
Declare.i CountEllement(*this.Array)
Declare.i SetEllement(*this.Array,number.i,*ellement.i)
Declare.i AddEllement(*this.Array,*ellement.i)
Declare.i FreeEllement(*this.Array,number.i)
Declare.i GetEllement(*this.Array,number.i)
Declare.i FreeArray(*this.Array)
Declare.i RemoveAll(*this.Array)
Declare.i FindStringNotInString(Txt.s,TxtToFind.s,char.i,position.i=1)
Declare.s GetTemporayFile(name.s)
Declare.s GetTemporayDirectory(name.s)
Declare.s FormatText(Line.s,*String.Array)
Declare.s StockString(Line.s,*StringList.Array)
Declare.s ReleaseString(Line.s,*StringList.Array)
Declare.s RemoveComment(Line.s)
Declare.s ReplaceChar(Line.s)
Declare.i IsAcceptedBeforePointer(Char.s)
Declare.i IsCorrectClass(Text.s)
Declare.i IsAcceptedForAPointer(Char.s)
Declare.i NewNewPref(Group.s,Name.s,Value.s)
Declare.i NewLanguage(File.s)
Declare.i LoadLanguage()
Declare.s GetText(Key.s)
Declare.i SCI_SetIndentationGuides(Gadget.i,Type.l)
Declare.i SCI_GetPosition(Gadget.i)
Declare.i SCI_GetLineEndPosition(Gadget.i,line.i)
Declare.i SCI_LineFromPosition(Gadget.i,Pos.i)
Declare.i SCI_PositionFromLine(Gadget.i,Line.i)
Declare.i SCI_LineLength(Gadget.i,line.i)
Declare.i SCI_GetLineStartPosition(Gadget.i,line.i)
Declare.i SCI_GETLINECOUNT(Gadget.i)
Declare.s SCI_GETLINE(Gadget.i,line.i)
Declare.i SCI_GetCharAt(Gadget.i,Position.i)
Declare.i SCI_SetLineIdentation(Gadget.i,Ligne.i,Identation.i)
Declare.i SCI_GetLineIdentation(Gadget.i,Ligne.i)
Declare.i SCI_GetTabWidth(Gadget.i)
Declare.i SCI_AddText(Gadget.i,txt.s)
Declare.i SCI_SetLine(Gadget.i,Line.i)
Declare.i SCI_SetPosition(Gadget.i,Position.i)
Declare.i SCI_GetPositionFromLine(Gadget.i,Line.i)
Declare.i SCI_GetTextWidth(gadget.i,style.i,txt.s)
Declare.i SCI_ResizeMargins(Gadget.i)
Declare.i SCI_GetEndStyled(Gadget.i)
Declare.i SCI_GetFoldLevel(Gadget.i,Line.l)
Declare.i SCI_SetFoldLevel(Gadget.i,Line.l,Level.l)
Declare.i SCI_CanRedo(Gadget.i)
Declare.i SCI_CanUndo(Gadget.i)
Declare.i SCI_EmptyUndoBuffer(Gadget.i)
Declare.i SCI_Undo(Gadget.i)
Declare.i SCI_GoToPoS(Gadget.i,pos.l)
Declare.i SCI_Redo(Gadget.i)
Declare.i SCI_GetLength(Gadget.i)
Declare.i SCI_FindString(Gadget.i,Text.s,Position.l=0,Flag.i=#Null)
Declare.i SCI_SetSel(Gadget.i,anchorPos.l,currentPos.l)
Declare.i KeyWordIs(key.s)
Declare.i Highlight(gadget.l,endpos.l)
Declare.i AutoComplete(Gadget.i,Pos.l)
Declare.i AutoIdent(Gadget.i)
Declare.s GetReciproque(Key.s)
Declare.i CheckIdent(Gadget.i,Line.i)
Declare.s GetFunctionProto(Gadget.i,Position.i)
DeclareDLL.i ScintillaCallBack(*Gadget.i,*scinotify.SCNotification)
Declare.i NewPanel()
Declare.i FreePanel(*This.Panel)
Declare.i NewIHM()
Declare.i SetStatusBarText(*this.IHM,Champ.i,txt.s)
Declare.i NewScintillaGadget(*this.IHM,PanelName.s)
Declare.i IHM_SetCurrentOption(*this.IHM,Option.i)
Declare.i ShowWindow(*this.IHM,numero.i)
Declare.i IHM_HideWindow(*this.IHM,numero.i)
Declare.i GetGadget(*this.IHM,numero.i)
Declare.i GetWindow(*this.IHM,numero.i)
Declare.i IHM_AddTemplate(*this.IHM,*Template.Template)
Declare.i ResizeWindows(*this.IHM,number.i)
Declare.i LoadFile(*this.IHM)
Declare.i IHM_RemovePanel(*this.IHM,Number.w)
Declare.i IHM_SetCurrentPanel(*this.IHM,Number.w)
Declare.i IHM_PanelModified(*this.IHM,Number.w)
Declare.i IHM_PanelSaved(*this.IHM,Number.w,Name.s)
Declare.i IHM_ShowProjectTree(*this.IHM,*Project.Project)
Declare.i IHM_SetCurrentProjectTree(*this.IHM,gadget.i)
Declare.i IHM_CloseProject(*this.IHM)
Declare.i IHM_OptionModified(*this.IHM)
Declare.i IHM_EventGadget(*this.IHM,Event.i,*System.System)
Declare.i NewDirectory(Path.s)
Declare.i Directory_CountElement(*this.Directory)
Declare.i Directory_FileIs(*this.Directory,Number.i)
Declare.i Directory_GetFile(*this.Directory,Number.i)
Declare.i AddFilesToTree(*this.Directory,*IHM.IHM,Level.i)
Declare.i Directory_IsFile(*this.Directory,*File.i)
Declare.s Directory_GetFilePath(*this.Directory,Number.l)
Declare.i Directory_RemoveFile(*this.Directory,Number.i)
Declare.i Directory_AddFile(*this.Directory,*File.i)
Declare.i NewFile()
Declare.i LoadStructure(*this.File)
Declare.i File_LoadFile(Path.s)
Declare.i saveFileIn(Gadget.i,File.s)
Declare.i SaveFile(*this.File,Gadget.i)
Declare.s File_GetFunctionList(*this.File)
Declare.i FreeFile(*this.File)
Declare.i NewTemplateName(Name.s,Language.s)
Declare.i NewTemplate(Path.s)
Declare.s Template_GetName(*this.Template,Language.s)
Declare.i GenerateTree(*this.Template,Path.s,Destination.s)
Declare.i GenerateProject(*this.Template,Path.s,Name.s)
Declare.i NewProject(Path.s,Name.s)
Declare.i Project_IsFile(*this.Project,*file.i)
Declare.i GetFileList(*this.Project)
Declare.i GetMode(*this.Project)
Declare.i OpenProject(Path.s)
Declare.i Project_FileIs(*this.Project,Number.i)
Declare.i Project_GetFile(*this.Project,Number.i)
Declare.s GetCompilerParamList(*this.Project)
Declare.i Project_AddNodeOption(*Parent.i,Name.s,Value.b)
Declare.i SaveProject(*this.Project)
Declare.s GetMediasPath(*this.Project)
Declare.s GetSourcesPath(*this.Project)
Declare.s GetGeneratedSourcesPath(*this.Project)
Declare.s GetBinariePath(*this.Project)
Declare.s Project_GetFilePath(*this.Project,Number.l)
Declare.i Project_RemoveFile(*this.Project,Number.l)
Declare.s Project_GetFunctionList(*this.Project)
Declare.i FreeProject(*this.Project)
Declare.i NewCompiler(StructureCompiler.w)
Declare.s Compiler_GetFunctionProtoFromName(*this.Compiler,txt.s)
Declare.i Compiler_RunProgram(*this.Compiler,Param.s)
Declare.i Build(*this.Compiler,Flag.s,Destination.s)
Declare.i FreeCompiler(*this.Compiler)
Declare.i NewCompilerStructure(Name.s)
Declare.s CompilerStructure_GetName(*this.CompilerStructure)
Declare.i FreeCompilerStructure(*this.CompilerStructure)
Declare.i NewCompilerFunction(Name.s)
Declare.s CompilerFunction_GetName(*this.CompilerFunction)
Declare.i FreeCompilerFunction(*this.CompilerFunction)
Declare.i LineIs(Line.s)
Declare.i NewComment(Comment.s,Line.i,Path.s="")
Declare.i NewStructure(Comment.s,Line.i,Path.s="")
Declare.i NewFunction(Function.s,Line.i,Path.s="")
Declare.s Function_GetName(*this.Function)
Declare.s MakeCompilerParamList(*this.System)
Declare.i GetCurrentCompiler(*this.System)
Declare.s GetFunctionProtoFromName(*this.System,txt.s)
Declare.i IsOpenFile(*this.System,File.s)
Declare.i UpdateOpenFile(*this.System,type.i,File.s)
Declare.i AddToHistory(*this.System,File.s)
Declare.i SaveCurrentPanel(*this.System)
Declare.i GetCurrentScintillaGadget(*this.System)
Declare.i CheckUndoRedo(*this.System)
Declare.i SetCurrentPanel(*this.System,NewElement.w)
Declare.i GetCurrentPanel(*this.System)
Declare.i CurrentFileModified(*this.System,Gadget.i)
Declare.i LoadTemplates(*this.System)
Declare.i CreateProject(*this.System,number.i,Path.s,Name.s)
Declare.i GetCurrentProject(*this.System)
Declare.i System_CloseProject(*this.System)
Declare.i System_OpenProject(*this.System,File.s)
Declare.i SavePreferences(*this.System)
Declare.i RemoveNewPreferences(*this.System)
Declare.i TryOpenFile(*this.System,File.s)
Declare.s GetFunctionList(*this.System)
Declare.i SystemEnd(*this.System)
